DROP TABLE IF EXISTS FollowerList;
DROP TABLE IF EXISTS Comment;
DROP TABLE IF EXISTS Tweet;
DROP TABLE IF EXISTS Tag;
DROP TABLE IF EXISTS ObtainAch;
DROP TABLE IF EXISTS Achievement;
DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Location;

CREATE TABLE Location(
	location_id INT UNSIGNED,
	country VARCHAR(50),
	state VARCHAR(50),
    PRIMARY KEY (location_id)
	) ENGINE = InnoDB;

CREATE TABLE User(
	user_id BIGINT UNSIGNED,
	user_name VARCHAR(20) UNIQUE,
	nick_name VARCHAR(20),
	bio_info VARCHAR(200),
	location_id INT UNSIGNED REFERENCES Location(location_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	blog_link VARCHAR(100),
	password VARCHAR(50),
	PRIMARY KEY (user_id)
	) ENGINE = InnoDB;

CREATE TABLE Tweet(
	tweet_id BIGINT UNSIGNED,
	poster_id BIGINT UNSIGNED REFERENCES User(user_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	time TIMESTAMP,
	content VARCHAR(200),
	location_id INT UNSIGNED REFERENCES Location(location_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	PRIMARY KEY (tweet_id)
	) ENGINE = InnoDB;

CREATE TABLE FollowerList(
	follower_id BIGINT UNSIGNED REFERENCES User(user_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE, /*first follows second*/
	following_id BIGINT UNSIGNED REFERENCES User(user_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	following_group VARCHAR(50),
	PRIMARY KEY (follower_id, following_id)
	) ENGINE = InnoDB;

CREATE TABLE Comment(
	tweet_id BIGINT UNSIGNED REFERENCES Tweet(tweet_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	replyer_id BIGINT UNSIGNED REFERENCES User(user_id),
	content VARCHAR(200),
	time TIMESTAMP,
	PRIMARY KEY (tweet_id, replyer_id, time)
	) ENGINE = InnoDB;

CREATE TABLE Tag(
	user_id BIGINT UNSIGNED REFERENCES User(user_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	tag_name VARCHAR(50),
	PRIMARY KEY (user_id, tag_name)
	) ENGINE = InnoDB;

CREATE TABLE Achievement(
	achi_id INT UNSIGNED,
	achi_name VARCHAR(50) UNIQUE,
	PRIMARY KEY (achi_id)
	) ENGINE = InnoDB;

CREATE TABLE ObtainAch(
	user_id BIGINT UNSIGNED REFERENCES User(user_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	achi_id INT UNSIGNED REFERENCES Achievement(achi_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	PRIMARY KEY (user_id, achi_id)
	) ENGINE = InnoDB;